package components

import "github.com/azeek21/blog/models"
import "fmt"
import "github.com/azeek21/blog/pkg/utils"

templ ArticlePreview(article models.Article) {
	<a id="post-preview" href={ templ.URL(fmt.Sprintf("/articles/%v", article.ID)) } class="flex flex-col gap-2 border border-inherit rounded-lg p-2 max-h-[300px]">
		<div id="post-preview-media" class="w-full flex gap-2 items-center">
			<div id="post-preview-image" class="min-w-[25%] w-1/4 sm:max-w-[50px] lg:max-w-[100px] xl:max-w-[200px] aspect-square overflow-clip">
				if article.HasImage() {
					<img class="w-full aspect-square" src={ string(templ.SafeURL(article.GetImage())) }/>
				} else {
					<img class="w-full aspect-square" src="/public/logo.png" alt="Alt Image 123"/>
				}
			</div>
			<h1 id="post-review-title" class="text-lg line-clamp-3">{ article.Title }</h1>
		</div>
		<div id="post-preview-meta" class="overflow-hidden">
			<p id="post-preview-content" class="text-sm line-clamp-5">
				{ article.Description }
			</p>
		</div>
	</a>
}

templ Article(article models.Article) {
	<div id="article" class="flex flex-col content-center gap-4 max-w-screen-xl mx-auto w-full border border-inherit rounded-lg shadow-sky-700 shadow-xl overflow-y-auto">
		<div id="article-controls" class="w-full border-b border-inherit p-2 flex gap-2 align-middle justify-end">
			if user, err := utils.GetUser(ctx); err == nil && user.ID == article.AuthorID {
				<a type="button" hx-confirm="Are you sure to delete this article?" hx-delete={ fmt.Sprintf("/api/articles/%v", article.ID) } class="sticky bottom-8 right-8 hover:text-red-500">Delete</a>
				<a type="button" href={ templ.SafeURL(fmt.Sprintf("/articles/%v/edit", article.ID)) } class="sticky bottom-8 right-8 hover:text-sky-500">Edit</a>
			}
			<button type="button" class="hover:text-green-500" onclick="toggleFullScreenById('article')">Full Screen</button>
		</div>
		<div id="article-content" class="p-4">
			if article.HasImage() {
				<img class="max-h-96 h-full aspect-video w-auto object-contain mx-auto" src={ article.GetImage() } alt={ article.Title }/>
			}
			<div class="border-b border-blue-300 py-4 flex flex-col gap-4">
				<h1 id="post-title" class="text-5xl">{ article.Title }</h1>
				<p id="post-title" class="text-xl">{ article.Description }</p>
			</div>
			@MarkdownView(article.Content, true)
		</div>
	</div>
}
